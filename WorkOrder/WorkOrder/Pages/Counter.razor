@page "/counter"
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Calendars
@using Microsoft.AspNetCore.Components.Forms;
@using System.ComponentModel.DataAnnotations;
<SfDialog IsModal="true" Height="450px" Width="300px" ShowCloseIcon="true">
    <DialogTemplates>
        <Header> New Work Order </Header>
        <Content>
            <EditForm Model="@NewOrder" OnValidSubmit="@SaveWorkOrder">
                <DataAnnotationsValidator />
                <SfTextBox FloatLabelType="FloatLabelType.Always" Placeholder="Work Title" @bind-Value="@NewOrder.Title"></SfTextBox>
                <SfTextBox FloatLabelType="FloatLabelType.Always" Placeholder="Work Description" @bind-Value="@NewOrder.Description"></SfTextBox>
                <SfTextBox FloatLabelType="FloatLabelType.Always" Placeholder="Work Location" @bind-Value="@NewOrder.Location"></SfTextBox>
                <SfDatePicker TValue="DateTime" FloatLabelType="FloatLabelType.Always" Placeholder="Order Date" @bind-Value="@NewOrder.OrderDate"></SfDatePicker>
                <SfNumericTextBox TValue="int" FloatLabelType="FloatLabelType.Always" Placeholder="Estimated hours" @bind-Value="@NewOrder.EstimatedHours" Max="10" Min="1"></SfNumericTextBox>

            </EditForm>
        </Content>
    </DialogTemplates>
    <DialogButtons>
        <DialogButton IsPrimary="true" Content="Add" OnClick="@SaveWorkOrder" />
    </DialogButtons>
    </SfDialog>
    @code{
        public bool Visibility = false;
        public Order NewOrder = new Order();
        public void SaveWorkOrder()
        {
            NewOrder.OrderID = Guid.NewGuid();
            NewOrder = new Order();
            //StateHasChanged();
        }
        void AddWorkOrder()
        {
            Visibility = true;
        }

        public class Order
        {
            public Guid OrderID { get; set; }
            [Required]
            public string Title { get; set; }
            [Required]
            public string Description { get; set; }
            [Required]
            public string Location { get; set; }
            public string Status { get; set; }
            [Required]
            public int EstimatedHours { get; set; }
            public DateTime OrderDate { get; set; } = DateTime.Now.Date;
        }
    }

