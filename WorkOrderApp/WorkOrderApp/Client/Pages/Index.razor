@page "/"

@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Calendars
@using Microsoft.AspNetCore.Components.Forms;
@using WorkOrderApp.Shared.Models
@inject HttpClient Http

@inject Blazored.LocalStorage.ILocalStorageService localStorage


<SfButton Content="Add Work Order" @onclick="AddWorkOrder"></SfButton>
<SfButton Content="Update Work Order" @onclick="UpdateWorkOrder"></SfButton>
<SfGrid @ref="GridRef" TValue="WorkOrder" AllowPaging="true" DataSource="OrderData">
    <GridEditSettings AllowAdding="true" NewRowPosition="NewRowPosition.Bottom"></GridEditSettings>
    <GridPageSettings PageSize="5"></GridPageSettings>
    <GridColumns>
        <GridColumn Field=@nameof(WorkOrder.Title) HeaderText="Order Title" Width="120"></GridColumn>
        <GridColumn Field=@nameof(WorkOrder.OrderDate) HeaderText="Order Date" Format="d" Type="ColumnType.Date" TextAlign="TextAlign.Right" Width="130"></GridColumn>
        <GridColumn Field=@nameof(WorkOrder.Description) HeaderText="Summary" Width="120"></GridColumn>
        <GridColumn Field=@nameof(WorkOrder.EstimatedHours) HeaderText="Esitmated Hours" Width="150"></GridColumn>
    </GridColumns>
</SfGrid>
<SfDialog Visible="Visibility" IsModal="true" Height="450px" Width="300px" ShowCloseIcon="true">
    <DialogTemplates>
        <Header> New Work Order </Header>
        <Content>
            <EditForm Model="@NewOrder" OnValidSubmit="@SaveWorkOrder">
                <DataAnnotationsValidator />
                <SfTextBox FloatLabelType="FloatLabelType.Always" Placeholder="Work Title" @bind-Value="@NewOrder.Title"></SfTextBox>
                <SfTextBox FloatLabelType="FloatLabelType.Always" Placeholder="Work Description" @bind-Value="@NewOrder.Description"></SfTextBox>
                <SfTextBox FloatLabelType="FloatLabelType.Always" Placeholder="Work Location" @bind-Value="@NewOrder.Location"></SfTextBox>
                <SfDatePicker TValue="DateTime?" FloatLabelType="FloatLabelType.Always" Placeholder="Order Date" @bind-Value="@NewOrder.OrderDate"></SfDatePicker>
                <SfNumericTextBox TValue="int?" FloatLabelType="FloatLabelType.Always" Placeholder="Estimated hours" @bind-Value="@NewOrder.EstimatedHours" Max="10" Min="1"></SfNumericTextBox>
            </EditForm>
        </Content>
    </DialogTemplates>
    <DialogButtons>
        <DialogButton IsPrimary="true" Content="Add" OnClick="@SaveWorkOrder" />
    </DialogButtons>

</SfDialog>

@code{
    public bool Visibility = false;
    public WorkOrder NewOrder = new WorkOrder();
    public List<WorkOrder> NewOrder1 = new List<WorkOrder>();
    public SfGrid<WorkOrder> GridRef;
    public async Task SaveWorkOrder()
    {

        Visibility = false;
        NewOrder.OrderId = Guid.NewGuid();
        NewOrder1.Add(NewOrder);
        await localStorage.SetItemAsync<List<WorkOrder>>("NewOrder", NewOrder1);
        await GridRef.AddRecordAsync(NewOrder1[0]);
        NewOrder = new WorkOrder();
    }
    void AddWorkOrder()
    {
        Visibility = true;
    }

    async Task UpdateWorkOrder()
    {


        List<WorkOrder> storedData = await localStorage.GetItemAsync<List<WorkOrder>>("NewOrder");
        await Http.PostAsJsonAsync<List<WorkOrder>>("WeatherForecast", storedData);
    }

    public List<WorkOrder> OrderData { get; set; }
    protected override async Task OnInitializedAsync()
    {
        OrderData = await Http.GetFromJsonAsync<List<WorkOrder>>("WeatherForecast");

    }

}
